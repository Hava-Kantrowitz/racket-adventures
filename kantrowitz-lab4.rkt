#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.0 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 69 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1           0 2124 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 190
(
 #"#reader(lib \"htdp-beginner-abbr-reader.ss\" \"lang\")((modname kant"
 #"rowitz-lab4) (read-case-sensitive #t) (teachpacks ()) (htdp-settings"
 #" #(#t constructor repeating-decimal #f #t none #f () #f)))"
) 0 0 4 29 1 #"\n"
0 0 17 3 11 #";; Homework"
0 0 17 3 2 #" 4"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";; Victoria Bowen: vabowen"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; Hava Kantrowitz: hskantrowitz"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Problem 1"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 7 #"contact"
0 0 24 3 2 #" ("
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 7 #"address"
0 0 24 3 1 #" "
0 0 14 3 5 #"email"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";; a Contact is a (make-contact String String String) where"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";;   name is the person's name"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";;   address is the person's home address"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";;   email is the person's email address"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";; interp. Contact as a customer of the credit card company"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 6 #"charge"
0 0 24 3 2 #" ("
0 0 14 3 8 #"business"
0 0 24 3 1 #" "
0 0 14 3 3 #"amt"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; a Charge is a (make-charge String Number) where"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";;   business is the business the person charged their credit card a"
 #"t"
) 0 0 24 29 1 #"\n"
0 0 17 3 63
#";;   amt is the amount of charge the person spent on their card"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";; interp. Charge as the charge on a customer's credit card"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; A ListOfCharge is one of"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;   empty"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";;   (cons charge ListOfCharge)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT1"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-contact"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Hava\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Street\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"gmail\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT2"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-contact"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"Joe\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Road\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"yahoo\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT3"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-contact"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Chris\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Lane\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\"charter\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT4"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-contact"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Evan\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Highway\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"gmail\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT5"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-contact"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"Syd\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Drive\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\"charter\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"CH1"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-charge"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"JetBlue\""
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"CH2"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-charge"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"Southwest\""
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"CH3"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-charge"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Spirit\""
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 3 #"CH1"
0 0 24 3 1 #" "
0 0 14 3 3 #"CH2"
0 0 24 3 1 #" "
0 0 14 3 3 #"CH3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 3 #"CH2"
0 0 24 3 1 #" "
0 0 14 3 3 #"CH3"
0 0 24 3 1 #" "
0 0 14 3 3 #"CH1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC3"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 3 #"CH3"
0 0 24 3 1 #" "
0 0 14 3 3 #"CH1"
0 0 24 3 1 #" "
0 0 14 3 3 #"CH2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Problem 2"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         181 21           0 0           0 29 0 17 3 26
#";; contact-fcn: Contact ->"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"contact-fcn"
0 0 24 3 1 #" "
0 0 14 3 9 #"a-contact"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 1 #"("
0 0 14 3 12 #"contact-name"
0 0 24 3 1 #" "
0 0 14 3 9 #"a-contact"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 15 #"contact-address"
0 0 24 3 1 #" "
0 0 14 3 9 #"a-contact"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 13 #"contact-email"
0 0 24 3 1 #" "
0 0 14 3 9 #"a-contact"
0 0 24 3 3 #")))"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         145 21           0 0           0 23 0 17 3 24
#";; charge-fcn: Charge ->"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"charge-fcn"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-charge"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 1 #"("
0 0 14 3 15 #"charge-business"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-charge"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 10 #"charge-amt"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-charge"
0 0 24 3 3 #")))"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         253 21           0 0           0 41 0 17 3 27
#";; loc-fcn: ListOfCharge ->"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"loc-fcn"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-loc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-loc"
0 0 24 3 2 #")("
0 0 14 3 3 #"..."
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 7 #"charge?"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-loc"
0 0 24 3 2 #")("
0 0 14 3 3 #"..."
0 0 24 3 1 #"("
0 0 14 3 10 #"charge-fcn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-loc"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 7 #"loc-fcn"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"loc"
0 0 24 3 6 #")))]))"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Problem 3"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; a BST is one of"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;   false"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";;   CustNode"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #";; a CustNode is a (make-customer Natural Contact Number ListOfCharg"
 #"e BST BST)"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 8 #"customer"
0 0 24 3 2 #" ("
0 0 14 3 11 #"card-number"
0 0 24 3 1 #" "
0 0 14 3 7 #"contact"
0 0 24 3 1 #" "
0 0 14 3 5 #"limit"
0 0 24 3 1 #" "
0 0 14 3 7 #"charges"
0 0 24 3 1 #" "
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 14 3 5 #"right"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; interp. CustNode as a binary tree where"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";;   card-number is the customer's card number"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";;   contact is the customer's contact information"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";;   limit is the limit set on the customer's card"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";;   charges is the list of charges on the customer's card"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";;   left is all card numbers less than the customer's card number"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";;   right is all card numbers greater than the customer's card numb"
 #"er"
) 0 0 24 29 1 #"\n"
0 0 17 3 90
(
 #";; INVARIANT: All nodes to the left of a node have a card number les"
 #"s than the root node's"
) 0 0 24 29 1 #"\n"
0 0 17 3 89
(
 #";; card number. All nodes to the right of a node have a card number "
 #"greater than the root"
) 0 0 24 29 1 #"\n"
0 0 17 3 22 #";; node's card number."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Problem 4"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"ATREE"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"123"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT1"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC1"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT2"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"240"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT3"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC3"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                            ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT3"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC1"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                           ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"230"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT5"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                            "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"BTREE"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"123"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT1"
0 0 24 3 1 #" "
0 0 21 3 3 #"600"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC1"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT2"
0 0 24 3 1 #" "
0 0 21 3 3 #"700"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"240"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT3"
0 0 24 3 1 #" "
0 0 21 3 3 #"800"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC3"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                            ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT3"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC1"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                           ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"230"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT5"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                            "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"CTREE"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"123"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT1"
0 0 24 3 1 #" "
0 0 21 3 3 #"600"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC1"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT2"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"240"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT3"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC3"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                            ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT3"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC1"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                           ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"230"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT5"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                            "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"DTREE"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"123"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT1"
0 0 24 3 1 #" "
0 0 21 3 3 #"600"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC1"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT2"
0 0 24 3 1 #" "
0 0 21 3 3 #"700"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"240"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT3"
0 0 24 3 1 #" "
0 0 21 3 2 #"65"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC3"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                            ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT3"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC1"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                           ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"230"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT5"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                            "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Problem 5"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; custnode-fcn: CustNode ->"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         415 21           0 0           0 68 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"custnode-fcn"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 8 #"boolean?"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 2 #")("
0 0 14 3 3 #"..."
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 9 #"customer?"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 2 #")("
0 0 14 3 3 #"..."
0 0 24 3 1 #"("
0 0 14 3 20 #"customer-card-number"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 11 #"contact-fcn"
0 0 24 3 2 #" ("
0 0 14 3 16 #"customer-contact"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 14 #"customer-limit"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 10 #"charge-fcn"
0 0 24 3 2 #" ("
0 0 14 3 16 #"customer-charges"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 12 #"custnode-fcn"
0 0 24 3 2 #" ("
0 0 14 3 13 #"customer-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 12 #"custnode-fcn"
0 0 24 3 2 #" ("
0 0 14 3 14 #"customer-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";; uses the templates for contact and charge as written in problem 2"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Problem 6"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; count-big-limits: BST Natural -> Natural"
0 0 24 29 1 #"\n"
0 0 17 3 99
(
 #";; consumes a BST and a credit limit, and produces the count of all "
 #"customers in the BST who have a"
) 0 0 24 29 1 #"\n"
0 0 17 3 50 #";; credit limit higher than the given credit limit"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";; checks where two are higher and one is equal to the limit"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"count-big-limits"
0 0 24 3 1 #" "
0 0 14 3 5 #"ATREE"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; checks where none are higher than the limit"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"count-big-limits"
0 0 24 3 1 #" "
0 0 14 3 5 #"ATREE"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; checks the false case"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"count-big-limits"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #")"
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"count-big-limits"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 5 #"limit"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 8 #"boolean?"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 9 #"customer?"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 14 #"customer-limit"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 2 #") "
0 0 14 3 5 #"limit"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 13 #"limit-counter"
0 0 24 3 2 #" ("
0 0 14 3 14 #"customer-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #") ("
0 0 14 3 13 #"customer-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 2 #") "
0 0 14 3 5 #"limit"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 13 #"limit-counter"
0 0 24 3 2 #" ("
0 0 14 3 14 #"customer-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #") ("
0 0 14 3 13 #"customer-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 2 #") "
0 0 14 3 5 #"limit"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; limit-counter: Customer Customer Limit -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";; consumes a customer and limit and produces the added together val"
 #"ue of any"
) 0 0 24 29 1 #"\n"
0 0 17 3 30 #";; count higher than the limit"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; checks the add"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"limit-counter"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT2"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT3"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC1"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                           ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"230"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT5"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"limit-counter"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-cust1"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-cust2"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-lim"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 16 #"count-big-limits"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-cust1"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-lim"
0 0 24 3 3 #") ("
0 0 14 3 16 #"count-big-limits"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-cust2"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-lim"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Problem 7"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; any-over-limit?: BST -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";; consumes a binary search tree and produces true if any customer"
0 0 24 29 1 #"\n"
0 0 17 3 5 #";; in"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 4 #"tree"
0 0 17 3 1 #" "
0 0 17 3 3 #"has"
0 0 17 3 1 #" "
0 0 17 3 2 #"an"
0 0 17 3 52 #" outstanding balance greater than their credit limit"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; tests where first element is over limit"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"any-over-limit?"
0 0 24 3 1 #" "
0 0 14 3 5 #"ATREE"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; tests where none are over limit"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"any-over-limit?"
0 0 24 3 1 #" "
0 0 14 3 5 #"BTREE"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; test false case"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"any-over-limit?"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; tests where not first element is over limit"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"any-over-limit?"
0 0 24 3 1 #" "
0 0 14 3 5 #"CTREE"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";; test where all are under limit, one is equal to limit"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"any-over-limit?"
0 0 24 3 1 #" "
0 0 14 3 5 #"DTREE"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"any-over-limit?"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 8 #"boolean?"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #")"
0 0 14 3 5 #"false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 9 #"customer?"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 2 #")("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 7 #"balance"
0 0 24 3 2 #" ("
0 0 14 3 16 #"customer-charges"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"customer-limit"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 14 3 4 #"true"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 15 #"any-over-limit?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"customer-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 15 #"any-over-limit?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"customer-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 7 #"))))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; balance: ListOfCharges -> Natural"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; checks the add"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"balance"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC1"
0 0 24 3 1 #")"
0 0 21 3 2 #"65"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"balance"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-loc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-loc"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-loc"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 10 #"charge-amt"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-loc"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 7 #"balance"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-loc"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Problem 8"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; increase-limit: BST Natural Number -> BST"
0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #";; consumes a binary search tree, a credit card number, and an amoun"
 #"t of money"
) 0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";; returns a tree the same as the original, except that the credit l"
 #"imit"
) 0 0 24 29 1 #"\n"
0 0 17 3 5 #";; of"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 8 #"customer"
0 0 17 3 1 #" "
0 0 17 3 4 #"with"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 5 #"given"
0 0 17 3 1 #" "
0 0 17 3 6 #"credit"
0 0 17 3 1 #" "
0 0 17 3 4 #"card"
0 0 17 3 33 #" number has been increased by the"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";; given amount. Assume the customer with the CCN exists within the "
 #"tree"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; checks the upper node"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"increase-limit"
0 0 24 3 1 #" "
0 0 14 3 5 #"ATREE"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"123"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT1"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC1"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT2"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"240"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT3"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC3"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                            ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT3"
0 0 24 3 1 #" "
0 0 21 3 2 #"80"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC1"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                           ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"230"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT5"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                            "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; checks the lower node"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"increase-limit"
0 0 24 3 1 #" "
0 0 14 3 5 #"BTREE"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"123"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT1"
0 0 24 3 1 #" "
0 0 21 3 3 #"600"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC1"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT2"
0 0 24 3 1 #" "
0 0 21 3 3 #"720"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"240"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT3"
0 0 24 3 1 #" "
0 0 21 3 3 #"800"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC3"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                            ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT3"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC1"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                           ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"230"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT5"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                            "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";; checks the central node"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"increase-limit"
0 0 24 3 1 #" "
0 0 14 3 5 #"ATREE"
0 0 24 3 1 #" "
0 0 21 3 3 #"123"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"123"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT1"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC1"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT2"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"240"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT3"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC3"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                            ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT3"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC1"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                           ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"230"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT5"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                            "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; checks the false case"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"increase-limit"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 3 #"123"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"increase-limit"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 3 #"ccn"
0 0 24 3 1 #" "
0 0 14 3 5 #"bonus"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 8 #"boolean?"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 9 #"customer?"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 3 #"ccn"
0 0 24 3 2 #" ("
0 0 14 3 20 #"customer-card-number"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 13 #"make-customer"
0 0 24 3 2 #" ("
0 0 14 3 20 #"customer-card-number"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 16 #"customer-contact"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 9 #"add-money"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 5 #"bonus"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 16 #"customer-charges"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 13 #"customer-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 14 #"customer-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          (("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 3 #"ccn"
0 0 24 3 2 #" ("
0 0 14 3 20 #"customer-card-number"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 13 #"make-customer"
0 0 24 3 2 #" ("
0 0 14 3 20 #"customer-card-number"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 16 #"customer-contact"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 14 #"customer-limit"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 16 #"customer-charges"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 14 #"increase-limit"
0 0 24 3 2 #" ("
0 0 14 3 13 #"customer-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 2 #") "
0 0 14 3 3 #"ccn"
0 0 24 3 1 #" "
0 0 14 3 5 #"bonus"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 14 #"increase-limit"
0 0 24 3 2 #" ("
0 0 14 3 14 #"customer-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 2 #") "
0 0 14 3 3 #"ccn"
0 0 24 3 1 #" "
0 0 14 3 5 #"bonus"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          (("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 3 #"ccn"
0 0 24 3 2 #" ("
0 0 14 3 20 #"customer-card-number"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 13 #"make-customer"
0 0 24 3 2 #" ("
0 0 14 3 20 #"customer-card-number"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 16 #"customer-contact"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 14 #"customer-limit"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 16 #"customer-charges"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 14 #"increase-limit"
0 0 24 3 2 #" ("
0 0 14 3 13 #"customer-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 2 #") "
0 0 14 3 3 #"ccn"
0 0 24 3 1 #" "
0 0 14 3 5 #"bonus"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 14 #"increase-limit"
0 0 24 3 2 #" ("
0 0 14 3 14 #"customer-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 2 #") "
0 0 14 3 3 #"ccn"
0 0 24 3 1 #" "
0 0 14 3 5 #"bonus"
0 0 24 3 7 #"))))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; add-money: BST Number -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 83
(
 #";; consumes a BST and an amount of money, and adds the amount of mon"
 #"ey to the limit"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; checks the add"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"add-money"
0 0 24 3 1 #" "
0 0 14 3 5 #"ATREE"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 2 #"11"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"add-money"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-bst"
0 0 24 3 1 #" "
0 0 14 3 5 #"money"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 14 #"customer-limit"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-bst"
0 0 24 3 2 #") "
0 0 14 3 5 #"money"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Problem 9"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; add-customer: BST Natural Contact -> BST"
0 0 24 29 1 #"\n"
0 0 17 3 142
(
 #";; consumes a BST, a credit card number, and a person's contact info"
 #"rmation. Produces a BST with a new customer added in the correct loc"
 #"ation."
) 0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";; The new customer has a credit limit of 25000 and an empty list of"
 #" charges"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; checks a less-than add"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"add-customer"
0 0 24 3 1 #" "
0 0 14 3 5 #"ATREE"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT2"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"123"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT1"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC1"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT2"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC2"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                            ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT2"
0 0 24 3 1 #" "
0 0 21 3 5 #"25000"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"240"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT3"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC3"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                            ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT3"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC1"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                           ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"230"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT5"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                            "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; checks a greater-than add"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"add-customer"
0 0 24 3 1 #" "
0 0 14 3 5 #"ATREE"
0 0 24 3 1 #" "
0 0 21 3 3 #"700"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT3"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"123"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT1"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC1"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT2"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"240"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT3"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC3"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                            ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT3"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC1"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                           ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"230"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT5"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 4 #"LOC2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                            ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"700"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT3"
0 0 24 3 1 #" "
0 0 21 3 5 #"25000"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; checks a false"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"add-customer"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT4"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"add-customer"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-BST"
0 0 24 3 1 #" "
0 0 14 3 9 #"given-num"
0 0 24 3 1 #" "
0 0 14 3 9 #"a-contact"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 8 #"boolean?"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-BST"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 9 #"customer?"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-BST"
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"boolean?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"customer-left"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-BST"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 9 #"given-num"
0 0 24 3 2 #" ("
0 0 14 3 20 #"customer-card-number"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-BST"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 13 #"make-customer"
0 0 24 3 2 #" ("
0 0 14 3 20 #"customer-card-number"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-BST"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                  ("
0 0 14 3 16 #"customer-contact"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-BST"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                  ("
0 0 14 3 14 #"customer-limit"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-BST"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                  ("
0 0 14 3 16 #"customer-charges"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-BST"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                  ("
0 0 14 3 12 #"new-customer"
0 0 24 3 1 #" "
0 0 14 3 9 #"a-contact"
0 0 24 3 1 #" "
0 0 14 3 9 #"given-num"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                  ("
0 0 14 3 14 #"customer-right"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-BST"
0 0 24 3 35 #"))]                                "
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                  [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"boolean?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"customer-right"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-BST"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 9 #"given-num"
0 0 24 3 2 #" ("
0 0 14 3 20 #"customer-card-number"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-BST"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 13 #"make-customer"
0 0 24 3 2 #" ("
0 0 14 3 20 #"customer-card-number"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-BST"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                  ("
0 0 14 3 16 #"customer-contact"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-BST"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                  ("
0 0 14 3 14 #"customer-limit"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-BST"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                  ("
0 0 14 3 16 #"customer-charges"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-BST"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                  ("
0 0 14 3 13 #"customer-left"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-BST"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                  ("
0 0 14 3 12 #"new-customer"
0 0 24 3 1 #" "
0 0 14 3 9 #"a-contact"
0 0 24 3 1 #" "
0 0 14 3 9 #"given-num"
0 0 24 3 37 #"))]                                  "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                   [ ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 9 #"given-num"
0 0 24 3 2 #" ("
0 0 14 3 20 #"customer-card-number"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-BST"
0 0 24 3 4 #")) ("
0 0 14 3 13 #"make-customer"
0 0 24 3 2 #" ("
0 0 14 3 20 #"customer-card-number"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-BST"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                  ("
0 0 14 3 16 #"customer-contact"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-BST"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                  ("
0 0 14 3 14 #"customer-limit"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-BST"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                  ("
0 0 14 3 16 #"customer-charges"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-BST"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                  ("
0 0 14 3 12 #"add-customer"
0 0 24 3 2 #" ("
0 0 14 3 13 #"customer-left"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-BST"
0 0 24 3 2 #") "
0 0 14 3 9 #"given-num"
0 0 24 3 1 #" "
0 0 14 3 9 #"a-contact"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                  ("
0 0 14 3 14 #"customer-right"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-BST"
0 0 24 3 36 #"))]                                 "
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                 [ ("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 9 #"given-num"
0 0 24 3 2 #" ("
0 0 14 3 20 #"customer-card-number"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-BST"
0 0 24 3 4 #")) ("
0 0 14 3 13 #"make-customer"
0 0 24 3 2 #" ("
0 0 14 3 20 #"customer-card-number"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-BST"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                  ("
0 0 14 3 16 #"customer-contact"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-BST"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                  ("
0 0 14 3 14 #"customer-limit"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-BST"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                  ("
0 0 14 3 16 #"customer-charges"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-BST"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                  ("
0 0 14 3 13 #"customer-left"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-BST"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                  ("
0 0 14 3 12 #"add-customer"
0 0 24 3 2 #" ("
0 0 14 3 14 #"customer-right"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-BST"
0 0 24 3 2 #") "
0 0 14 3 9 #"given-num"
0 0 24 3 1 #" "
0 0 14 3 9 #"a-contact"
0 0 24 3 7 #"))])]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; new-customer: Contact Natural -> Customer"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";; consumes a person's contact information and credit card number, a"
 #"nd produces"
) 0 0 24 29 1 #"\n"
0 0 17 3 37 #";; the customer with that information"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; checks the create"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"new-customer"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT2"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 5 #"CONT2"
0 0 24 3 1 #" "
0 0 21 3 5 #"25000"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"new-customer"
0 0 24 3 1 #" "
0 0 14 3 9 #"cont-info"
0 0 24 3 1 #" "
0 0 14 3 3 #"ccn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 14 3 3 #"ccn"
0 0 24 3 1 #" "
0 0 14 3 9 #"cont-info"
0 0 24 3 1 #" "
0 0 21 3 5 #"25000"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0           0
